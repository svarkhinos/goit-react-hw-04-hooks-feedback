{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","control","map","option","index","type","btn","onClick","Statistics","good","neutral","bad","total","positivePercentage","count","Section","title","children","section","Notification","message","App","useState","setGood","setNeutral","setBad","setTotal","setPositivePercentage","useEffect","Math","round","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,MAAQ,4B,kBCA1BD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,IAAM,+B,iBCAnED,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,gC,qICwBbC,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACE,qBAAKC,UAAWC,IAAEC,QAAlB,SACGJ,EAAQK,KAAI,SAACC,EAAQC,GAAT,OACX,wBACEC,KAAK,SACLN,UAAWC,IAAEM,IAEbC,QAAS,kBAAMT,EAAgBM,IAJjC,SAMGD,GAHIC,W,gBCuBFI,EA/BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,uCACQ,sBAAMd,UAAWC,IAAEc,MAAnB,SAA2BL,OAEnC,0CACW,sBAAMV,UAAWC,IAAEc,MAAnB,SAA2BJ,OAEtC,sCACO,sBAAMX,UAAWC,IAAEc,MAAnB,SAA2BH,OAElC,wCACS,sBAAMZ,UAAWC,IAAEc,MAAnB,SAA2BF,OAEpC,mDACqB,IACnB,uBAAMb,UAAWC,IAAEc,MAAnB,UAA2BD,EAA3B,e,gBCNOE,EAXC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASlB,UAAWC,IAAEkB,QAAtB,UACGF,GAAS,6BAAKA,IADjB,IAC+BC,M,gBCQpBE,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,mBAAGrB,UAAWC,IAAEoB,QAAhB,SAA0BA,OCuDjBC,EAtDH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOb,EAAP,KAAac,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOZ,EAAP,KAAgBc,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOX,EAAP,KAAYc,EAAZ,KACA,EAA0BH,mBAAS,GAAnC,mBAAOV,EAAP,KAAcc,EAAd,KACA,EAAoDJ,mBAAS,GAA7D,mBAAOT,EAAP,KAA2Bc,EAA3B,KAuBA,OALAC,qBAAU,WACRF,EAASjB,EAAOC,EAAUC,GAC1BgB,EAAsBE,KAAKC,MAAOrB,EAAOG,EAAS,QACjD,CAACH,EAAMC,EAASC,EAAKC,IAGtB,6CAEE,cAAC,EAAD,CAASI,MAAM,wBAAf,SACE,cAAC,EAAD,CACEnB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA3BgB,SAAAM,GACtB,OAAQA,GACN,KAAK,EACHmB,GAAQ,SAAAQ,GAAS,OAAIA,EAAY,KACjC,MACF,KAAK,EACHP,GAAW,SAAAO,GAAS,OAAIA,EAAY,KACpC,MACF,KAAK,EACHN,GAAO,SAAAM,GAAS,OAAIA,EAAY,KAChC,MACF,QACE,aAkBF,cAAC,EAAD,CAASf,MAAM,aAAf,SACa,IAAVJ,EACC,cAAC,EAAD,CAAcQ,QAAQ,sBAEtB,cAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,UChDhCmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e5be9409.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"Statistics_count__1_WHI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"FeedbackOptions_control__1XtPy\",\"btn\":\"FeedbackOptions_btn__2UzQ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__bCgQ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2slME\"};","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      <div className={s.control}>\n        {options.map((option, index) => (\n          <button\n            type=\"button\"\n            className={s.btn}\n            key={index}\n            onClick={() => onLeaveFeedback(index)}\n          >\n            {option}\n          </button>\n        ))}\n      </div>\n    </>\n  );\n};\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <p>\n        Good: <span className={s.count}>{good}</span>\n      </p>\n      <p>\n        Neutral: <span className={s.count}>{neutral}</span>\n      </p>\n      <p>\n        Bad: <span className={s.count}>{bad}</span>\n      </p>\n      <p>\n        Total: <span className={s.count}>{total}</span>\n      </p>\n      <p>\n        Positive feedback:{' '}\n        <span className={s.count}>{positivePercentage} %</span>\n      </p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      {title && <h2>{title}</h2>} {children}\n    </section>\n  );\n};\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return (\n    <>\n      <p className={s.message}>{message}</p>\n    </>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\nexport default Notification;\n","import { useState, useEffect } from 'react';\n\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [positivePercentage, setPositivePercentage] = useState(0);\n\n  const onLeaveFeedback = index => {\n    switch (index) {\n      case 0:\n        setGood(prevState => prevState + 1);\n        break;\n      case 1:\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 2:\n        setBad(prevState => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  useEffect(() => {\n    setTotal(good + neutral + bad);\n    setPositivePercentage(Math.round((good / total) * 100));\n  }, [good, neutral, bad, total]);\n\n  return (\n    <div>\n      Homework-4\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        )}\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}